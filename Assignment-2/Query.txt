create user hw2 identified by tiger;
grant dba to hw2
Start "D:\Desktop\2018-Fall\95703-F-Database\Assignment 2\Comp_Loan.txt"
SET PAGESIZE 1000
SET LINESIZE 1000

--1
--SELF JOIN
COLUMN st_id1 FORMAT A10
COLUMN st_id2 FORMAT A10
COLUMN student_name_1 FORMAT A20
COLUMN student_name_2 FORMAT A20


SELECT DISTINCT s.st_id st_id1,s.st_fname||' '||s.st_lname student_name_1,s2.st_id st_id2, s2.st_fname||' '||s2.st_lname student_name_2,l.comp_id ,c.comp_name
FROM STUDENT s, LOAN l ,COMPUTER c, ITEM i, STUDENT s2, LOAN l2 ,COMPUTER c2, ITEM i2
WHERE s.st_id = l.st_id
AND l.comp_id = c.comp_id
AND c.item_id = i.item_id
AND s.st_id < s2.st_id
AND s2.st_id = l2.st_id
AND l2.comp_id = c2.comp_id
AND c2.item_id = i2.item_id
AND l.comp_id = l2.comp_id
AND LOWER(i.item_manuf) = 'apple'
AND LOWER(i2.item_manuf) = 'apple';

--2
--FIND COMPUTERS RETURNED 30 DAYS BEFORE CURRENT DATE AND IS NOT ON LOAN NOW, PLUS COMPUTER NEVER ON LOAN
COLUMN item_model FORMAT A30
COLUMN COMP_NAME FORMAT A20
COLUMN location FORMAT A20
COLUMN date_last_used FORMAT A20
SELECT comp_id, comp_name, EXTRACT(YEAR FROM purchase_date) PURCHASED_YEAR, item_model,location_id||'-'||loc_bldg||' '|| loc_room location, NVL(MAX(date_returned),NULL) date_last_used
FROM COMPUTER LEFT OUTER JOIN LOAN USING (comp_id)
			  JOIN ITEM USING (item_id)
			  JOIN LOCATION USING (location_id)
WHERE comp_id IN (SELECT comp_id
				  FROM COMPUTER
				  MINUS
				  SELECT comp_id
				  FROM COMPUTER JOIN LOAN USING (comp_id)
								JOIN ITEM USING (item_id)
								JOIN LOCATION USING (location_id)
			      WHERE date_returned > sysdate-30 
				  OR date_returned IS NULL)
GROUP BY comp_id, comp_name,purchase_date,item_model,location_id,loc_bldg,loc_room;

--3
--
COLUMN item_manuf FORMAT A15
SELECT item_manuf,MIN(start_date) EARLIES_DATE_USED, COUNT(DISTINCT comp_id) NUMBER_OF_COMPUTER, COUNT(loan_id) NUMBER_OF_LOAN
FROM COMPUTER LEFT OUTER JOIN LOAN USING (comp_id)
			  JOIN ITEM USING(item_id)
GROUP BY item_manuf
UNION ALL
SELECT 'GRANT_TOTAL',NULL, COUNT(DISTINCT comp_id), COUNT(loan_id)
FROM COMPUTER LEFT OUTER JOIN LOAN USING (comp_id)
			  JOIN ITEM USING(item_id);
			  
--4
--FIND COMPUTERS RETURNED BEFORE CURRENT DATE AND IS NOT ON LOAN NOW, PLUS COMPUTER NEVER ON LOAN 
SELECT comp_id, comp_name, COUNT(loan_id) times_on_loan,ROUND(sysdate-MAX(date_returned),0) number_of_days_not_used
FROM LOAN JOIN COMPUTER USING (comp_id)
		  JOIN ITEM USING (item_id)
		  JOIN LOCATION USING (location_id)
WHERE date_returned IS NOT NULL
AND comp_id NOT IN (SELECT comp_id FROM LOAN JOIN COMPUTER USING (comp_id) WHERE date_returned IS NULL)
GROUP BY comp_id, comp_name
HAVING MAX(date_returned) < sysdate
UNION
SELECT comp_id, comp_name, 0, ROUND(sysdate - purchase_date,0)
FROM LOAN RIGHT OUTER JOIN COMPUTER USING (comp_id)
		  JOIN ITEM USING (item_id)
		  JOIN LOCATION USING (location_id)
WHERE (start_date IS NULL AND date_returned IS NULL);

--5
COLUMN st_fname FORMAT A10
COLUMN st_lname FORMAT A10
COLUMN program_name FORMAT A25
COLUMN EMAIL FORMAT A20
COLUMN comp_name FORMAT A10

SELECT st_id,st_fname,st_lname, name program_name,email, comp_id,comp_name, start_date, date_returned
FROM LOAN JOIN COMPUTER USING (comp_id)
		  JOIN STUDENT USING (st_id)
		  JOIN PROGRAM USING (prog_id)
WHERE (date_returned - start_date) < 7
AND date_returned IS NOT NULL
ORDER BY st_lname;

--6
--P.S. I assume that the question means: the length of each loan is more than 30 days, but no restriction on the overlapping days.
SELECT s1.st_id, s1.st_fname, s1.st_lname,l1.comp_id compid_1,l2.comp_id compid_2, ROUND(l1.date_returned - l1.start_date,0) length_of_loan1, ROUND(l2.date_returned - l2.start_date,0) length_of_loan2
FROM STUDENT s1, STUDENT s2, LOAN l1, LOAN l2
WHERE s1.st_id = l1.st_id
AND s2.st_id = l2.st_id
AND s1.st_id = s2.st_id
AND l1.comp_id < l2.comp_id
AND l2.start_date < l1.date_returned
AND (l1.date_returned - l1.start_date) > 30
AND (l2.date_returned - l2.start_date) > 30
UNION
SELECT s1.st_id, s1.st_fname, s1.st_lname,l1.comp_id compid_1,l2.comp_id compid_2, ROUND(sysdate - l1.start_date,0) length_of_loan1, ROUND(l2.date_returned - l2.start_date,0) length_of_loan2
FROM STUDENT s1, STUDENT s2, LOAN l1, LOAN l2
WHERE s1.st_id = l1.st_id
AND s2.st_id = l2.st_id
AND s1.st_id = s2.st_id
AND l1.comp_id < l2.comp_id
AND l1.date_returned IS NULL
AND l1.start_date < l2.date_returned
AND (sysdate - l1.start_date) > 30
AND (l2.date_returned - l2.start_date) > 30
UNION
SELECT s1.st_id, s1.st_fname, s1.st_lname,l1.comp_id compid_1,l2.comp_id compid_2,ROUND(l1.date_returned - l1.start_date,0) length_of_loan1, ROUND(sysdate - l2.start_date,0) length_of_loan2
FROM STUDENT s1, STUDENT s2, LOAN l1, LOAN l2
WHERE s1.st_id = l1.st_id
AND s2.st_id = l2.st_id
AND s1.st_id = s2.st_id
AND l1.comp_id < l2.comp_id
AND l2.date_returned IS NULL
AND l2.start_date < l1.date_returned
AND (sysdate - l2.start_date) > 30
AND (l1.date_returned - l1.start_date) > 30
UNION
SELECT s1.st_id, s1.st_fname, s1.st_lname,l1.comp_id compid_1,l2.comp_id compid_2, ROUND(sysdate - l1.start_date,0) length_of_loan1, ROUND(sysdate - l2.start_date,0) length_of_loan2
FROM STUDENT s1, STUDENT s2, LOAN l1, LOAN l2
WHERE s1.st_id = l1.st_id
AND s2.st_id = l2.st_id
AND s1.st_id = s2.st_id
AND l1.comp_id < l2.comp_id
AND l2.date_returned IS NULL
AND l1.date_returned IS NULL
AND l1.start_date < l2.start_date
AND (sysdate - l2.start_date) > 30
AND (sysdate - l1.start_date) > 30;

--7
-- ON LOAN PLUS AVAILABLE
SELECT comp_id, comp_name,st_id, st_fname,st_lname
FROM COMPUTER LEFT OUTER JOIN LOAN USING (comp_id)
			  JOIN LOCATION USING (location_id)
			  JOIN STUDENT USING (st_id)
WHERE UPPER(loc_bldg) = 'NSH'
AND date_returned IS NULL
UNION
SELECT DISTINCT comp_id, comp_name,'','',''
FROM COMPUTER LEFT OUTER JOIN LOAN USING (comp_id)
			  JOIN LOCATION USING (location_id)
WHERE UPPER(loc_bldg) = 'NSH'
AND comp_id NOT IN (SELECT comp_id
					FROM COMPUTER LEFT OUTER JOIN LOAN USING (comp_id)
					WHERE UPPER(loc_bldg) = 'NSH'
					AND date_returned IS NULL)
AND date_returned IS NOT NULL;

--8
COLUMN LIST_OF_MANUFACTURERS_ID_MODEL FORMAT A50
COLUMN VENDOR_NAME FORMAT A20
SELECT vendor_name,
	   LISTAGG(item_manuf||': '||'('||item_id||item_model||')',', ') WITHIN GROUP
			  (ORDER BY item_manuf) AS List_of_manufacturers_id_model,
			  COUNT(*) NUMBER_OF_COMPUTERS
FROM COMPUTER JOIN ITEM USING (item_id)
WHERE vendor_name NOT LIKE ('%'||item_manuf||'%')
GROUP BY vendor_name;



